{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAASF,SAASC,cAAc,uBAChCE,EAAQH,SAASC,cAAc,sBAC/BG,EAAUJ,SAASC,cAAc,sBACrBD,SAASC,cAAc,yBAyBzC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,GACFF,EAAQ,CAAEH,WAAUC,UAEtBG,EAAO,CAAEJ,WAAUC,YAClBA,MA/BPR,EAAKgB,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAIC,iBACJ,IAAIC,EAAQC,OAAOjB,EAAOkB,OACtBC,EAAOF,OAAOhB,EAAMiB,OACpBE,EAASH,OAAOf,EAAQgB,OACxBG,EAAW,KAEf,IAAKA,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EAClDlB,EAAekB,EAAUL,GACzBM,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,UAEvEuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA7B,GAAS8B,OAAOI,QAAQ,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,UAErEW,GAASG,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst delayR = document.querySelector('input[name=\"delay\"]');\nconst stepR = document.querySelector('input[name=\"step\"]');\nconst amountR = document.querySelector('input[name=amount]');\nconst submitBtn = document.querySelector('button[type=\"submit\"]');\n\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  let delay = Number(delayR.value);\n  let step = Number(stepR.value);\n  let amount = Number(amountR.value);\n  let position = null;\n\n  for (position = 1; position <= amount; position += 1 ) {\n   createPromise( position, delay )\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  delay += step;\n  };\n\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    \n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } \n      reject({ position, delay });\n    }, delay);\n\n  })\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayR","$ce04d3a99e08e73b$var$stepR","$ce04d3a99e08e73b$var$amountR","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","delay1","Number","value","step","amount","position1","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.89c7774c.js.map"}